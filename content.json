{"posts":[{"title":"random quote generator","text":"IntroductionReact is one of powerful frontend frameworks when it comes to state management. Developed by Meta (former Facebook), React have an in-built state object which seamlessly manages display of your webapp according to interactions with your application. in this project I used React to generate random quotes from an API as the user clicks on the button. the webapp is hosted for free on heroku.","link":"/Projects/random-quote-generator/"},{"title":"Korean drama webscraping","text":"(on the cover) Hospital Playlist TLDR: I made a list of korean Dramas with rankings and other cool descriptors for each drama IntroductionAs a avid Korean drama watcher, finding the next great drama to watch is the real deal. From my personal experience, most Korean dramas plots are slow-burn meaning that you have to watch multiple episode to understand well the story. For shows which takes more than 10 50-minute-ish episodes, getting a good drama recommendation is a life-saver. When we had a webscraping class during my intro to data science class, I quickly grasped my passion project:Building a giant list of Korean dramas from different websites and then analyse which drama to watch and where. ProcessI collected ratings, platforms, release year, number of episodes, tags,airing times, episode length, description and many more descriptors with the goal of developing robust recommender system for myself. I used Beautifulsoup python library to webscrape Wikipedia, mydramalist, and imdb websites. MyDramalist is a website containing a variety of asian dramas and movies with excellent breadth when it comes to giving drama metadata. The Internet Movie Database (IMDb) is an online database containing information and statistics about movies, TV shows and video games as well as actors, directors and other film industry professionals. Its popularity means it gives credible ratings as it have large user base. PlanningI webscraped Korean drama list from wikipedia gaining about 1500 korean dramas. 1234567891011121314151617181920212223from bs4 import BeautifulSoupimport requestsdef get_wikilinks(): url=&quot;https://en.wikipedia.org/wiki/List_of_South_Korean_dramas&quot; r=requests.get(url) soup=BeautifulSoup(r.content,&quot;html.parser&quot;,from_encoding='utf-8') x=soup.find_all('ul') start=0 movies={} for i in x: if start&gt;=2: break for a in i.find_all('a', href=True): if a['href']==&quot;#See_also&quot;: start+=1 elif a['href']==&quot;/wiki/List_of_South_Korean_television_series&quot;: start+=1 break elif start: movies[a.get_text().strip()]=&quot;https://en.wikipedia.org&quot;+a['href'] return movies code for scrapping list of korean dramas from wikipedia I then used the list to find a breadth of descriptors from mydramalist website through search and scrape strategy getting about 1300 korean dramas. On the side, I webscraped IMDB to get imdb rating and concise drama description, generating about 1510 korean drama. I finally joined one from dramalist and imdb, leading to a final list of about 750 korean drama, this was because imdb list included miniseries or korean drama names differed drastically from names in mydramalist. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748# getting dramalist from wikipediawikilinks=get_wikilinks()dramas=wikilinks.keys()##test example (it is important to keep a small list for testing because websites limit number# of requests so limiting webscraping instances is crucial)test=['The Greatest Marriage',&quot;Vincenzo&quot;]#get mydramalist korean dramalistdramalist=get_dramalist(dramas)imdb=get_imdb_ratings()[0]#contains 'Also Known as' section of mydramalist dramalistother_names=dramalist[1]#store other descriptors from mydramalistdrama_descr=dramalist[0]#stores final list of dramaswith_imdb={}for movie in imdb.keys(): for drama in drama_descr.keys(): #check if drama name from imdb is same as name in mydramalist name or is in # 'Also known as' section of mydramalist descriptors if drama in other_names.keys() and (movie.lower()==drama.lower() or (movie.lower() in other_names[drama])): with_imdb[drama]=drama_descr[drama] with_imdb[drama]['imdb_name']=movie with_imdb[drama]['imdb_rating']=imdb[movie][0] with_imdb[drama]['imdb_user_count']=imdb[movie][1] with_imdb[drama]['imdb_description']=imdb[movie][2] ###(testing outputs ongo helps to test data sanity) #print([drama,with_imdb[drama]])for val in with_imdb: #formatting entries with_imdb[val][&quot;Tags&quot;][-1]=with_imdb[val][&quot;Tags&quot;][-1].replace(&quot;(vote or add tags)&quot;,&quot;&quot;) temp=re.findall(&quot;\\d+\\.?\\d*&quot;,with_imdb[drama][&quot;imdb_rating&quot;]) if len(temp)==1: with_imdb[drama][&quot;imdb_rating&quot;]=temp[0]df=pd.DataFrame(with_imdb)df = df.transpose()###storing korean drama list into a pandas dataframedf.to_csv(&quot;kdramalist.csv&quot;, encoding='utf-8', index=False,na_rep=&quot;N/A&quot;)###evaluate accuracyprint(&quot;#############lengths: &quot;,(len(with_imdb),len(drama_descr)))#############lengths: (741, 1279) this dataset can be used for multiple data science projects including sentiment analysis,supervised learning and recommender systems. You can download the dataset from Kaggle and and look at the full code from Github. This Webscraping project is part of Kdrama project in which I practice my data science and engineering skills, step by step until I achieve highly accurate model for recommending korean drama. My milestone projects (not in order) are as below: Data collection Webscraping (done) (read the write above on webscraping project) APIs Datasets ETL process:the goal is to automate data collection data modelling Data pipelining Dashboarding Data visualization and statistics metric analysis more Dashboards visualization Machine learning:(the cool part, you know) machine learning models Recommender system :) Sentiment analysis and NLP Advanced sophisticated machine learning analytics using alternate data and AI computing advancements","link":"/Projects/korean-drama-webscraping/"},{"title":"Hello World","text":"Welcome to my Blog! this is my first Post. My name is Iphigenie Bera and I can’t wait to share my knowledge, learning journey and bits of my life here. I am currently pursuing my Undergraduate degree in Computer Science at Northwestern University with a minor in Data science and Engineering. I was born and raised in Rwanda before coming in the USA for my studies. I am interested in everything data: data engineering, data science, data analytics and software engineering. I believe in the power of data in making sound decisions and optimizing resources. I will post articles about my computer science journey in articles. you can look at my resume from navigation bar resume. I will document by projects with code snippets and demos, if applicable in projects. Feel free to browse my posts my tags tags or categories or track past post in the archives. you can reach out to me on Github or linkedIn.","link":"/Other/hello-world/"}],"tags":[{"name":"React","slug":"React","link":"/tags/React/"},{"name":"heroku","slug":"heroku","link":"/tags/heroku/"},{"name":"webscraping","slug":"webscraping","link":"/tags/webscraping/"},{"name":"data engineering","slug":"data-engineering","link":"/tags/data-engineering/"},{"name":"data mining","slug":"data-mining","link":"/tags/data-mining/"},{"name":"Introduction","slug":"Introduction","link":"/tags/Introduction/"},{"name":"k-drama","slug":"k-drama","link":"/tags/k-drama/"},{"name":"BeautifulSoup","slug":"BeautifulSoup","link":"/tags/BeautifulSoup/"},{"name":"Pandas","slug":"Pandas","link":"/tags/Pandas/"},{"name":"Hello World","slug":"Hello-World","link":"/tags/Hello-World/"}],"categories":[{"name":"Projects","slug":"Projects","link":"/categories/Projects/"},{"name":"Other","slug":"Other","link":"/categories/Other/"}],"pages":[{"title":"Introduction","text":"Iphigenie Bera who am IMy name is Iphigenie Bera, and I am an Undergraduate Computer Science student at Northwestern University, USA. I worked at Meta(former Facebook) as data engineering intern and worked as a Research Assistant in a surface engineering lab at Northwestern University. My study and work interests mainly are in the areas of machine learning, artificial intelligence, general computer science, data engineering and software engineering. I am a MOOC courses junkie, so I consume a couple of courses on Coursera, FreecodeCamp, Youtube and Udemy to supplement my college courses. Before joining Computer Science program, I was in Mechanical Engineering program where during first college year I picked up engineering analysis skills and felt in love with programming and decided to join Computer Science, the rest is history. InterestsI am a data-first person. I first ensure data quality of data and identify insights from data. I advocate for responsible data science practices by addressing bias associated with data processes.From Healthcare, infrastructure planning, finance, media and all the way to digital intergration with physical systems,I am interested in design of data intensive systems, enforcing better data governance, agility and resourcefulness. HobbiesI love flowers and wouldn’t be ashamed to take picture of flowers in public [ I might make a big dataset out of my flowers collection, who knows:) ]. I like to watch Korean dramas and listen to BTS, so I am casual Korean learner.","link":"/about/index.html"}]}